---

- name: Add Docker official GPG key
  become: true
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker repository
  become: true
  ansible.builtin.apt_repository:
    repo: "deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    filename: docker
    state: present

- name: Ensure all packages are up to date
  become: true
  ansible.builtin.apt:
    update_cache: true

- name: Install Docker packages
  become: true
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
      - docker-ce-rootless-extras
    state: present

- name: Check if Docker Rootless is installed
  ansible.builtin.stat:
    path: /run/user/{{ ansible_user_uid }}/docker.sock
  register: file_check_docker_rootless

- name: Disable Docker.service
  become: true
  ansible.builtin.systemd:
    name: docker.service
    masked: true
    enabled: false

- name: Disable Docker.socket
  become: true
  ansible.builtin.systemd:
    name: docker.socket
    masked: true
    enabled: false

- name: Install Docker (rootless, using systemd)
  when: not file_check_docker_rootless.stat.exists
  args:
    creates: /home/{{ ansible_user_uid }}/.config/systemd/user/docker.service
  ansible.builtin.shell: |
    rm /var/run/docker.sock
    dockerd-rootless-setuptool.sh install
    echo 'export PATH=/usr/bin:$PATH' >> /home/{{ ansible_user_id }}/.bashrc
    echo "export DOCKER_HOST=unix:///run/user/{{ ansible_user_uid }}/docker.sock" >> /home/{{ ansible_user_id }}/.bashrc
    loginctl enable-linger {{ ansible_user_id }}

- name: Configure Docker Daemon.json
  become: true
  ansible.builtin.copy:
    dest: /etc/docker/daemon.json
    mode: "0644"
    content: |
      {
        "iptables": true,
        "bip": "10.249.0.1/24"
        "default-address-pools":[
          {"base":"10.249.1.0/24","size":28}
        ]
      }

- name: Ensure the user directory docker service exists
  ansible.builtin.file:
    path: /home/{{ ansible_user_id }}/.config/systemd/user/docker.service.d
    state: directory
    mode: '0755'

- name: Configure systemd override for user
  ansible.builtin.copy:
    dest: /home/{{ ansible_user_id }}/.config/systemd/user/docker.service.d/override.conf
    mode: "0644"
    content: |
      [Service]
      Environment="DOCKERD_ROOTLESS_ROOTLESSKIT_DISABLE_HOST_LOOPBACK=false"
      Environment="DOCKERD_ROOTLESS_ROOTLESSKIT_NET=slirp4netns --cidr=10.249.0.0/24"

- name: Ensure the directory for Portainer exists
  ansible.builtin.file:
    path: /home/{{ ansible_user_id }}/docker/portainer
    mode: '0750'
    state: directory

- name: Configure Portainer with Docker Compose
  ansible.builtin.copy:
    dest: /home/{{ ansible_user_id }}/docker/portainer/docker-compose.yml
    mode: "0640"
    content: |
      services:
        portainer:
          image: portainer/portainer-ee:latest
          container_name: portainer
          restart: always
          security_opt:
            - no-new-privileges:true
          volumes:
            - /etc/localtime:/etc/localtime:ro
            - portainer_data:/data
          ports:
            - "9000:9000"
        portainer_agent:
          image: portainer/portainer-agent:latest
          container_name: portainer_agent
          restart: always
          security_opt:
            - no-new-privileges:true
          volumes:
            - /etc/localtime:/etc/localtime:ro
            - /run/user/{{ ansible_user_uid }}/docker.sock:/var/run/docker.sock
            - /home/{{ ansible_user_id }}/.local/share/docker/volumes:/var/lib/docker/volumes
          ports:
            - "9001:9001"
      volumes:
        portainer_data:
    owner: "{{ ansible_user_uid }}"
    group: "{{ ansible_user_gid }}"

- name: Refresh env
  changed_when: true
  ansible.builtin.shell: |
    . /home/{{ ansible_user_id }}/.bashrc
    exit 0

- name: Run the Docker service
  ansible.builtin.systemd:
    name: docker
    enabled: true
    state: reloaded
    scope: user

- name: Start Docker Portainer
  community.docker.docker_compose_v2:
    project_src: /home/{{ ansible_user_id }}/docker/portainer
    state: present
