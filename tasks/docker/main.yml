---

    - name: Add Docker official GPG key
      become: yes
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
        
    - name: Add Docker repository
      become: yes
      apt_repository:
        repo: "deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        filename: docker
        state: present

    - name: Ensure all packages are up to date
      become: yes
      apt:
        update_cache: yes
        
    - name: Install Docker packages
      become: yes
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
          - docker-ce-rootless-extras
        state: present

    - name: Install Docker (rootless)
      shell: |
        systemctl disable --now docker.service docker.socket
        rm /var/run/docker.sock
        dockerd-rootless-setuptool.sh install
        echo 'export PATH=/usr/bin:$PATH' >> /home/{{ ansible_user_id }}/.bashrc
        echo "export DOCKER_HOST=unix:///run/user/{{ ansible_user_uid }}/docker.sock" >> /home/{{ ansible_user_id }}/.bashrc
        systemctl --user start docker
        systemctl --user enable docker
        loginctl enable-linger {{ ansible_user_id }}

    - name: Ensure the directory for Portainer exists
      file:
        path: /home/{{ ansible_user_id }}/docker/portainer
        state: directory
        mode: '0750'

    - name: Configure Portainer with Docker Compose
      copy:
        dest: /home/{{ ansible_user_id }}/docker/portainer/docker-compose.yml
        content: |
          services:
            portainer:
              image: portainer/portainer-ee:latest
              container_name: portainer
              restart: always
              security_opt:
                - no-new-privileges:true
              volumes:
                - /etc/localtime:/etc/localtime:ro
                - portainer_data:/data
              ports:
                - "9000:9000"
            portainer_agent:
              image: portainer/portainer-agent:latest
              container_name: portainer_agent
              restart: always
              security_opt:
                - no-new-privileges:true
              volumes:
                - /etc/localtime:/etc/localtime:ro
                - /run/user/{{ ansible_user_uid }}/docker.sock:/var/run/docker.sock
                - /home/{{ ansible_user_id }}/.local/share/docker/volumes:/var/lib/docker/volumes
              ports:
                - "9001:9001"
          volumes:
            portainer_data:
        owner: "{{ ansible_user_uid }}"
        group: "{{ ansible_user_gid }}"        
